name: Build Docker Image

on:
  push:
    branches:
      - master
  pull_request:
    branches:
      - master

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
    # Step 1: Checkout the code from the repository
    - name: Checkout repository
      uses: actions/checkout@v3

    # Step 2: Set up Docker
    - name: Set up Docker
      uses: docker/setup-buildx-action@v2

    # Step 3: Log in to Docker (optional, if pushing to Docker Hub)
    #- name: Log in to Docker Hub
    #  uses: docker/login-action@v2
    #  with:
    #    username: ${{ secrets.DOCKER_USERNAME }}
    #    password: ${{ secrets.DOCKER_PASSWORD }}

    # Step 4: Build the Docker image
    - name: Build Docker image
      run: |
        # Build the Docker image using the Dockerfile in the repository
        docker build -t my-python-web-app .

    # Step 5: Optionally, run the container to test it
    - name: Run Docker container
      run: |
        # Run the container in detached mode
        docker run -d -p 5000:5000 --name web-app my-python-web-app
        docker ps

    # Step 6: Optionally, run tests within the container (if you have any)
    #- name: Run tests inside the container (optional)
    #  run: |
    #    # Assuming you have a testing framework like pytest
    #    docker exec my-python-web-app pytest > result.log || tail -n 10 result.log

    # Step 7: Clean up (stop and remove the container)
    #- name: Clean up
    #  run: |
    #    docker stop my-python-web-app
    #    docker rm my-python-web-app

    # Step 8: Optionally, push the image to Docker Hub (if you need to push the image)
    #- name: Push Docker image to Docker Hub
    #  if: github.ref == 'refs/heads/main'
    #  run: |
    #    docker tag my-python-web-app:latest your-docker-username/my-python-web-app:latest
    #    docker push your-docker-username/my-python-web-app:latest

